dt[,!mpg]
dt[,!.(mpg)]
dt[,-.(mpg)]
dt[,.(mpg)]
dt[,.(-mpg)]
dt[,.c(-mpg)]
dt[,c(-mpg)]
dt[,(mpg)]
dt[,!mpg]
dt[,!"mpg"]
library(wr.data.table)
data.table(mtcars)
library(data.table)
source("~/.active-rstudio-document", echo=TRUE)
wr.select(dt, !"mpg")
wr.select(dt, "!mpg")
wr.select(dt, "mpg")
wr.select(dt, mpg)
library(wr.data.table)
source("~/.active-rstudio-document", echo=TRUE)
dt[,"mpg2":=mpg*2]
dt
dt[,"!mpg2":=mpg2*2]
dt
library(wr.data.table)
source("~/.active-rstudio-document", echo=TRUE)
library(wr.data.table)
source("~/.active-rstudio-document", echo=TRUE)
library(wr.data.table)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
library(wr.data.table)
source("~/.active-rstudio-document", echo=TRUE)
library(wr.data.table)
source("~/.active-rstudio-document", echo=TRUE)
alist <- list("a","b","c")
alist[-1]
library(wr.data.table)
library(wr.data.table)
source("~/.active-rstudio-document", echo=TRUE)
library(wr.data.table)
library(wr.data.table)
source("~/.active-rstudio-document", echo=TRUE)
library(wr.data.table)
source("~/.active-rstudio-document", echo=TRUE)
library(wr.data.table)
source("~/.active-rstudio-document", echo=TRUE)
library(wr.data.table)
source("~/.active-rstudio-document", echo=TRUE)
library(wr.data.table)
source("~/.active-rstudio-document", echo=TRUE)
dt <-wr.select(dt, mpg, am, vs)
dt
library(wr.data.table)
source("~/.active-rstudio-document", echo=TRUE)
library(wr.data.table)
source("~/.active-rstudio-document", echo=TRUE)
dt
dt
dt
library(wr.data.table)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
library(wr.data.table)
library(wr.data.table)
source("~/.active-rstudio-document", echo=TRUE)
library(wr.data.table)
library(wr.data.table)
source("~/.active-rstudio-document", echo=TRUE)
library(wr.data.table)
source("~/.active-rstudio-document", echo=TRUE)
library(wr.data.table)
source("~/.active-rstudio-document", echo=TRUE)
library(wr.data.table)
source("~/.active-rstudio-document", echo=TRUE)
library(wr.data.table)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
library(wr.data.table)
source("~/.active-rstudio-document", echo=TRUE)
library(wr.data.table)
source("~/.active-rstudio-document", echo=TRUE)
library(wr.data.table)
source("~/.active-rstudio-document", echo=TRUE)
source("C:/Users/Ka Lok/OneDrive/Data Science/R/myPackages/wr.data.table/R/wr.select.R", echo=TRUE)
library(wr.data.table)
source("~/.active-rstudio-document", echo=TRUE)
library(wr.data.table)
source("C:/Users/Ka Lok/OneDrive/Data Science/R/myPackages/wr.data.table/R/wr.select.R", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
library(wr.data.table)
source("~/.active-rstudio-document", echo=TRUE)
library(wr.data.table)
source("~/.active-rstudio-document", echo=TRUE)
library(wr.data.table)
source("~/.active-rstudio-document", echo=TRUE)
as.call(list(quote(list),"a,","b"))
library(wr.data.table)
source("~/.active-rstudio-document", echo=TRUE)
library(wr.data.table)
source("~/.active-rstudio-document", echo=TRUE)
library(wr.data.table)
source("~/.active-rstudio-document", echo=TRUE)
library(wr.data.table)
source("~/.active-rstudio-document", echo=TRUE)
library(wr.data.table)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
library(wr.data.table)
source("~/.active-rstudio-document", echo=TRUE)
library(wr.data.table)
source("~/.active-rstudio-document", echo=TRUE)
library(wr.data.table)
source("~/.active-rstudio-document", echo=TRUE)
library(wr.data.table)
source("~/.active-rstudio-document", echo=TRUE)
library(wr.data.table)
source("~/.active-rstudio-document", echo=TRUE)
library(wr.data.table)
source("~/.active-rstudio-document", echo=TRUE)
dt
source("~/.active-rstudio-document", echo=TRUE)
dt
dt <-wr.select(dt, -mpg)
source("~/.active-rstudio-document", echo=TRUE)
dt
source("~/.active-rstudio-document", echo=TRUE)
library(wr.data.table)
dt
dt <- data.table(mtcars)
dt[,.(-mpg)]
dt[,.(-"mpg")]
dt[,.("-!mpg")]
dt[,!"mpg"]
dt[,.(!mpg)]
dt[,!.(mpg)]
dt[,-dt$mpg]
dt[,!dt$mpg]
dt[,dt%mpg]
dt[,dt$mpg]
dt[,mpg:vs]
wr.select(dt, mpg:vs)
wr.select(dt, mpg,vs)
library(wr.data.table)
source("~/.active-rstudio-document", echo=TRUE)
dt[,list(mpg:vs)]
dt <- data.table(mtcars)
dt[,list(mpg:vs)]
dt[,list(1:2)]
dt[,list(1:8)]
dt[,1:8]
library(wr.data.table)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
library(wr.data.table)
source("~/.active-rstudio-document", echo=TRUE)
library(wr.data.table)
source("~/.active-rstudio-document", echo=TRUE)
dt
dt
data.table(mtcars)[,mpg:vs]
library(wr.data.table)
source("~/.active-rstudio-document", echo=TRUE)
quote[dt(,)]
quote(dt[,)
quote("dt[,")
library(wr.data.table)
source("~/.active-rstudio-document", echo=TRUE)
source("C:/Users/Ka Lok/OneDrive/Data Science/R/myPackages/wr.data.table/testScript.R", echo=TRUE)
library(wr.data.table)
source("~/.active-rstudio-document", echo=TRUE)
dt
library(wr.data.table)
#' Function to subset data.table with selected columns/variables
#'
#' @import data.table
#'
# @export
wr.select <- function(dt, ...) {
expr <- match.call()
stopifnot("dt must be data.table" = any(class(dt) == "data.table"))
expr <- as.list(expr[-1:-2])
# isRange
isRange <- lapply(expr, function(x) {grepl(":", deparse(x))}) |> unlist()
dt_range <- data.table()
if (length(expr[isRange]) >= 1) {
rangeExprAsStrings <- (lapply(expr[isRange], function(x) { deparse(x) }) |> unlist())
for (s in rangeExprAsStrings) {
callAsString <- paste0("dt[,",s,"]")
dt_range <- cbind(dt_range,eval(parse(text=callAsString)))
}
}
# !isRange
dt_separate <- data.table()
print("is not range")
print(length(expr[!isRange]))
if (length(expr[!isRange]) >= 1) {
constructCall <- as.call(c(
as.name("list"),
c(expr[!isRange])
))
dt_separate <- copy(dt)[,eval(constructCall)]
}
cbind(dt_range, dt_separate)
}
library(data.table)
dt <- data.table(mtcars)
dt1 <- wr.select(dt, mpg, vs)
dt2 <- wr.select(dt, mpg:hp, vs,am, mpg, hp)
dt2
#' Function to subset data.table with selected columns/variables
#'
#' @import data.table
#'
# @export
wr.select <- function(dt, ...) {
expr <- match.call()
stopifnot("dt must be data.table" = any(class(dt) == "data.table"))
expr <- as.list(expr[-1:-2])
# isRange
isRange <- lapply(expr, function(x) {grepl(":", deparse(x))}) |> unlist()
dt_range <- data.table()
if (length(expr[isRange]) >= 1) {
rangeExprAsStrings <- (lapply(expr[isRange], function(x) { deparse(x) }) |> unlist())
for (s in rangeExprAsStrings) {
callAsString <- paste0("dt[,",s,"]")
dt_range <- cbind(dt_range,eval(parse(text=callAsString)))
}
}
isRemoval <- lapply(expr, function(x) {grepl("-", deparse(x))}) |> unlist()
# !isRange
dt_separate <- data.table()
if (length(expr[!isRange & !isRemoval]) >= 1) {
constructCall <- as.call(c(
as.name("list"),
c(expr[!isRange])
))
dt_separate <- copy(dt)[,eval(constructCall)]
}
cbind(dt_range, dt_separate)
}
dt
dt[,-c(mpg, cyl)]
dt[,-c("mpg", "cyl")]
#testScript
library(wr.data.table)
# data.table.withRownames()
dt <- data.table.withRownames(mtcars, check.names=TRUE)
dt
# wr.order()
dt |> wr.order(am, vs)
dt
# wr.order()
dt |> wr.order(am, vs)
dt
# wr.filter()
dt |> wr.filter(mpg > 20 & am == 1)
# wr.assignCols()
dt |> wr.assignCols(newCol = paste(rn, carb))
dt
# wr.assignCols()
dt |> wr.assignCols(newCol = paste(rn, carb))
dt
dt |> wr.assignCols(kmpl = mpg * 0.425144) # convert to km per L
dt
dt |> wr.assignCols(newCol = NULL) # delete column
dt
source("C:/Users/Ka Lok/OneDrive/Data Science/R/myPackages/wr.data.table/testScript.R", echo=TRUE)
# wr.select()
dt |> wr.select(mpg)
dt <- wr.select(dt, mpg, vs)
# wr.select()
dt |> wr.select(mpg)
dt |> wr.select(dt, mpg, vs)
# wr.select()
dt |> wr.select(mpg)
dt |> wr.select(dt, mpg, vs)
dt |> wr.select(mpg, vs)
dt |> wr.select(mpg:hp, vs,am, mpg, hp)
# wr.select()
data.table(mtcars) |> wr.select(mpg)
data.table(mtcars) |> wr.select(mpg, vs)
data.table(mtcars) |> wr.select(mpg:hp, vs,am, mpg, hp)
data.table(mtcars) |> wr.assignCols(newCol = NULL) # delete column
# data.table.withRownames()
dt <- data.table.withRownames(mtcars, check.names=TRUE)
# wr.order()
dt |> wr.order(am, vs)
# wr.order()
dt |> wr.order(am, vs)
# wr.order()
dt |> wr.order(am, vs, gear)
# wr.order()
dt |> wr.order(gear, am, vs)
# wr.assignCols()
dt |> wr.assignCols(newCol = paste(rn, carb))
dt
dt |> wr.assignCols(kmpl = mpg * 0.425144) # convert to km per L
dt
dt |> wr.assignCols(newCol = NULL) # delete column
dt
library(wr.data.table)
source("C:/Users/Ka Lok/OneDrive/Data Science/R/myPackages/wr.data.table/testScript.R", echo=TRUE)
# wr.select()
data.table(mtcars) |> wr.select(-mpg)
library(data.table)
data.table(mtcars)[,-c("mpg:hp")]
data.table(mtcars)[,-c("mpg":"hp")]
library(wr.data.table)
library(wr.data.table)
data.table(matcars)|> wr.summarise(mean=mean(mpg))
library(data.table)
data.table(matcars)|> wr.summarise(mean=mean(mpg))
data.table(mtcars)|> wr.summarise(mean=mean(mpg))
dt <- data.table(mtcars)|> wr.summarise(mean=mean(mpg))
dt
dt
dt <- data.table(mtcars)|> wr.group_by(am) |> wr.summarise(mean=mean(mpg))
dt <- data.table(mtcars)|> wr.group_by(am)
dt
dt |> attributes()
dt <- data.table(mtcars)|> wr.summarise(mean=mean(mpg))
dt
dt
dt <- data.table(mtcars)|> wr.summarise(mean=mean(am))
dt
dt
install.packages("qpdf")
library(wr.data.table)
data.table()[,sample:=1]
dt <- data.table()[,sample:=list(1,1,2,2)]
dt <- data.table()[,"sample":=list(1,1,2,2)]
dt <- data.table()[,sample:=c(1,1,2,2)]
dt
dt
library(qpdf)
test_dir()
test_that::test_dir()
library(testthat)
test_dir()
?test_dir
test_dir("C:/Users/Ka Lok/OneDrive/Data Science/R/myPackages/wr.data.table")
test_dir("C:/Users/Ka Lok/OneDrive/Data Science/R/myPackages/wr.data.table")
?test_dir
test_dir("C:/Users/Ka Lok/OneDrive/Data Science/R/myPackages/wr.data.table")
rlang::last_error()
rlang::last_trace()
test_dir()
test_dir(C:/Users/Ka Lok/OneDrive/Data Science/R/myPackages/wr.data.table/tests)
test_dir("C:/Users/Ka Lok/OneDrive/Data Science/R/myPackages/wr.data.table/tests")
test_dir("C:/Users/Ka Lok/OneDrive/Data Science/R/myPackages/wr.data.table/tests")
test_dir("C:/Users/Ka Lok/OneDrive/Data Science/R/myPackages/wr.data.table/tests")
data.table(mtcars) |> wr.assignCols(mpg = mpg*2)
dt |> data.table(mtcars) |> wr.assignCols(mpg = mpg*2)
dt <- data.table(mtcars) |> wr.assignCols(mpg = mpg*2)
dt
dt
dt <- data.table(mtcars) |> wr.assignCols(mpg2 = mpg*2)
dt
dt
test_dir("C:/Users/Ka Lok/OneDrive/Data Science/R/myPackages/wr.data.table/tests")
# wr.assignCols()
dt <- data.table(mtcars) |> wr.assignCols(newCol = paste(rn, carb))
dt
# wr.assignCols()
dt <- data.table(mtcars) |> wr.assignCols(newCol = paste(rn, carb))
# wr.assignCols()
dt <- data.table(mtcars) |> wr.assignCols(newCol = paste(mpg, carb))
dt
test_dir("C:/Users/Ka Lok/OneDrive/Data Science/R/myPackages/wr.data.table/tests")
dt
test_dir("C:/Users/Ka Lok/OneDrive/Data Science/R/myPackages/wr.data.table/tests")
test_dir("C:/Users/Ka Lok/OneDrive/Data Science/R/myPackages/wr.data.table/tests")
test_dir("C:/Users/Ka Lok/OneDrive/Data Science/R/myPackages/wr.data.table/tests")
test_dir("C:/Users/Ka Lok/OneDrive/Data Science/R/myPackages/wr.data.table/tests")
test_file("C:/Users/Ka Lok/OneDrive/Data Science/R/myPackages/wr.data.table/tests/test.R")
test_file("C:/Users/Ka Lok/OneDrive/Data Science/R/myPackages/wr.data.table/tests/tests.R")
library(testthat)
document()
library(devtools)
document()
library(wr.data.table)
roxygen2::roxygenise()
roxygen2::roxygenise()
roxygen2::roxygenise()
remove.packages(qpdf)
remove.packages("qpdf")
?read_csv()
library(qpdf)
install.packages(qpdf)
install.packages("qpdf")
library(wr.data.table)
?fars_read
?read_csv
library(wr.data.table)
?fars_read
?read.csv
?dplyr::tbl_df
dplyr::tbl_df(mtcars)
dplyr::as_tibble(mtcars)
?read.csv
class(dply::tbl_df(data()))
class(dplyr::tbl_df(data(mtcars)))
Sys.which(Sys.getenv("R_QPDF", "qpdf"))
library(tools)
Sys.getenv("PATH")
library(wr.data.table)
?read.csv
?fars_read
?sprintf
sprintf("file", date("2012-01-26"))
sprintf("file", date())
data()
date
date()
sprintf("file", date
())
sprintf("file%d", date())
sprintf("file%s", date())
sprintf("%s %d", "test", 1:3)
sprintf("file%d", 2011:2019)
readr::read_csv(c("a.csv", "b.csv"))
readr::read_csv(c("a.csv", "b.csv"))
r <- readr::read_csv(c("a.csv", "b.csv"))
r
library(wr.data.table)
library(wr.data.table)
library(wr.data.table)
?fars_read
library(wr.data.table)
?make_filename
library(wr.data.table)
?make_filename
library(wr.data.table)
library(wr.data.table)
?fars_read_years
read.csv(C:/Users/Ka Lok/Downloads/_e1adac2a5f05192dc8780f3944feec13_fars_data.zip/data)
df <-read.csv("C:/Users/Ka Lok/Downloads/_e1adac2a5f05192dc8780f3944feec13_fars_data.zip/data")
df <-read.csv("C:/Users/Ka Lok/Downloads/_e1adac2a5f05192dc8780f3944feec13_fars_data.zip/data/accident_2013.csv.bz2")
df <-read.csv("C:/Users/Ka Lok/Downloads/_e1adac2a5f05192dc8780f3944feec13_fars_data/data/accident_2013.csv.bz2")
df
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
library(wr.data.table)
library(devtools)
library(devtools)
document()
roxygen2::roxygenise()
use_gpl3_license()
data3
system.file("data", package = "wr.data.table")
load(paste0(system.file("data", package = "wr.data.table"),"sysdata.rda")
)
load(paste0(system.file("data", package = "wr.data.table"),"/sysdata.rda")
)
load(paste0(system.file("data", package = "wr.data.table"),"/sysdata.rda"))
use_data(mtcars)
library(wr.data.table)
data1
data2
data3
mtcars
library(wr.data.table)
wr.assignCols(data.table(mtcars),mpg=mtcars$hp)
library(wr.data.table)
wr.assignCols(data.table(mtcars),mpg=mtcars$hp)
git remote
library(testthat)
test_check('wr.data.table')
devtools::uses_testthat()
devtools::uses_testthat
devtools::uses_testthat()
devtools::use_testthat()
devtools::use_test
library(devtools)
use_testthat()
use_test()
use_testthat()
use_test()
use_test()
use_test()
test_check()
test_check('wr.data.table')
library(wr.data.table)
roxygen2::roxygenise()
document()
test_that("data.table is created with row names", {
expect_that(wr_dt_withrownames(mtcars), is_a("data.table"))
expect_identical(wr_dt_withrownames(mt.cars),
data.table(rownames(mtcars),mtcars))
})
test_that("data.table is created with row names", {
expect_that(wr_dt_withrownames(mtcars), is_a("data.table"))
expect_identical(wr_dt_withrownames(mtcars),
data.table(rownames(mtcars),mtcars))
})
data.table(rownames(mtcars), mtcars)
wr_dt_withrownames(mtcars)
test_that("data.table is created with row names", {
expect_that(wr_dt_withrownames(mtcars), is_a("data.table"))
expect_equal(wr_dt_withrownames(mtcars),
data.table(rownames(mtcars),mtcars))
})
test_that("data.table is created with row names", {
expect_that(wr_dt_withrownames(mtcars), is_a("data.table"))
expect_equal(wr_dt_withrownames(mtcars),
data.table(rownames(mtcars),mtcars))
})
library(wr.data.table)
